version: 0.2

# Environment Variables stored in paramet-store and used for building
env:
    parameter-store:
        NPM_TOKEN: NPM_TOKEN
        AWS_ACCESS_KEY_ID: AMAZON_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY: AMAZON_SECRET_ACCESS_KEY


phases:
    install:
        commands:
        - apt-get update && apt-get install -y jq

    #build before
    pre_build:
        commands:
        

        - echo Logging in to Amazon ECR...
        - aws --version
        # Login into aws with user account
        - eval $( aws ecr get-login --no-include-email --region us-east-1 )
        # ECR Repo name, change according to building environment
        - REPOSITORY_URI=908117773420.dkr.ecr.us-east-1.amazonaws.com/osrm
        # Commit hash var
        - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        # Osrm versio
        - VERSION=$(jq .version config.json -r)

    build:
        commands:
        - echo $VERSION
        - echo Build started on `date`
        - echo Building the Docker image...
        - for k in $( jq '.osrm | length' config.json );
            do
            index=$(($k - 1));
            name=$(jq -r --arg index $index '.osrm | .[$index | tonumber] | .name ' config.json );
            IMAGE_TAG=$name-$VERSION;
            IMAGE_NAME=osrm-test;
            echo $IMAGE_TAG;
            address=$(jq -r --arg index $index '.osrm | .[$index | tonumber] | .address ' config.json );
            docker  build  -t $REPOSITORY_URI:$IMAGE_TAG . --build-arg ADDRESS=$address;
            echo Pushing the Docker images...;
            docker push $REPOSITORY_URI:$IMAGE_TAG ;
            echo Writing dev image definitions file...;
            printf '[{"name":$IMAGE_NAME,"imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > $name-imagedefinitions.json;
            done


    post_build:
        commands:


        # %s => $REPOSITORY_URI:$VERSION
        # Task Definition => Container Name
       


artifacts:
    files:
    - $CODEBUILD_SRC_DIR/*
   